<?xml version="1.0"?>
<ruleset name="Our_Coding_standard">
    <description>The coding standard for all ExEss projects.</description>

    <!-- Custom project specific config -->
    {{project.custom}}
    <!-- End custom project specific config -->

    <!-- Include most of the PSR2 standard -->
    <rule ref="PSR2">
        <exclude name="PSR1.Classes.ClassDeclaration" />
        <include name="PEAR.Classes.ClassDeclaration" />
        <exclude name="Squiz.Classes.ValidClassName" />

        <!-- allows: requires in top of files for class loading -->
        <exclude name="PSR1.Files.SideEffects" />

        <!-- allows: if(\n true \n || false \n) -->
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing" />
    </rule>

    <!-- Generic rules -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />

    <!-- Squeez rules -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>

    <!-- Slevomat rules -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint" />
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint" />
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint" />
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint" />
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue" />
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints" />
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment" />
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations" />
    <rule ref="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment" />
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions" />
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants" />
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
        <properties>
            <property name="forbiddenAnnotations" type="array" value="@author,@created,@version,@package,@subpackage,@copyright,@license,@date"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
        <properties>
            <property name="forbiddenCommentPatterns" type="array" value="/Constructor.$/"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true" />
        </properties>
    </rule>

    <!-- Custom rules -->
    <rule ref="{{custom.sniffs}}" />

    <!-- Exclude some rules for tests -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <exclude-pattern>/tests/*</exclude-pattern>
    </rule>
</ruleset>
