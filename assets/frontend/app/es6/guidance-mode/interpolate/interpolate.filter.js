'use strict';

/**
 * @ngdoc function
 * @name digitalWorkplaceApp.filter:interpolate filter
 * @description
 * Filter to dynamically generate a piece of text in an element.
 * The text is generated by providing an expression and a model from which values in the expression can be retrieved.
 * If the expression results in a blank string, the specified default is shown instead.
 *
 * For example, the following input:
 *
 * <p>{{ expression | interpolate:model:'Default title'</p>
 *
 * Where model is:
 * {
 *  companyName: 'Exesser',
 *  verb: 'is',
 *  adjective: 'awesome'
 * }
 *
 * And where the expression is: '{{ companyName }} {{ verb }} {{ adjective }}'
 *
 * Will result in a paragraph that reads 'Exesser is awesome'
 *
 * If the model is {}, the step-title is filled with 'Default title'.
 *
 * Filter of the digitalWorkplaceApp
 */
angular.module('digitalWorkplaceApp')
  .filter('interpolate', function ($interpolate, orDefaultFilter, expressionTransformer) {
    return function (expression, model, defaultValue) {
      // Translate the expression to an angular expression without pipe
      expression = expressionTransformer(expression);

      // Translate the model so the keys don't contain a pipe
      const transformedModel = angular.fromJson(_.replace(angular.toJson(model), /\|/g, "_I_"));

      const interpolated = $interpolate(expression)(transformedModel);
      return orDefaultFilter(interpolated, defaultValue);
    };
  });
